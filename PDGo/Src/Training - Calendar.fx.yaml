"'Training - Calendar' As screen":
    OnVisible: |+
        =If(IsBlank(_userDomain),
            UpdateContext({_showLoading: true});
            Set(_userDomain, Right(User().Email, Len(User().Email) - Find("@", User().Email)));
            Set(_dateSelected, Today());
            Set(_firstDayOfMonth, DateAdd(Today(), 1 - Day(Today()), TimeUnit.Days));
            Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));
            Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days))
        );
        Set(_calendarVisibles, false);
        UpdateContext({_showLoading: true});
        
        
        
        Set(_minDate, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));
        Set(_maxDate, DateAdd(DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days), 40, TimeUnit.Days));
        ClearCollect(MyCalendarEvents, Office365Outlook.GetEventsCalendarViewV2("Calendar"  , Text(_minDate, DateTimeFormat.UTC), Text(_maxDate, DateTimeFormat.UTC)).value);
        ClearCollect(FilteredTrainingEvents, Filter(MyCalendarEvents, StartsWith(Lower(Subject), "training")));
        UpdateContext({_showLoading: false});
        Set(_calendarVisible, true);
        

    ListEventsOnCalCont As groupContainer.manualLayoutContainer:
        Height: =484
        Width: =Parent.Width
        Y: =652
        ZIndex: =1

        eventsOnCalendar As gallery.variableTemplateHeightGallery:
            DelayItemLoading: =true
            Height: =504
            Items: |-
                =SortByColumns(
                    Filter(
                        MyCalendarEvents, 
                        Text(Start, DateTimeFormat.ShortDate) = Text(_dateSelected, DateTimeFormat.ShortDate) && StartsWith( Subject , "TRAINING")
                    ), 
                    "Start"
                )
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            TemplateFill: =If(ThisItem.IsSelected, Color.AliceBlue, RGBA(0, 0, 0, 0))
            TemplatePadding: =0
            TemplateSize: =284
            Transition: =Transition.Pop
            Width: =Parent.Width
            ZIndex: =1

            btnTemplate_2 As button:
                Color: =
                Fill: |-
                    =If(
                        "mcle" in Lower(ThisItem.Subject),
                        Color.AliceBlue, 
                        If(
                           "safety" in Lower(ThisItem.Subject),
                           RGBA(0, 0, 255, 1), 
                           RGBA(255, 255, 255, 1) 
                        )
                    )
                Height: =222
                HoverFill: =ColorFade(Self.Fill, -20%)
                OnSelect: =Select(Parent)
                PressedFill: =ColorFade(Self.Fill, -30%)
                Size: =24
                Text: =
                Width: =Parent.Width
                ZIndex: =1

            TImeNDate As label:
                Align: =Align.Center
                Height: =74
                OnSelect: =Select(Parent)
                Size: =21
                Text: =ThisItem.Start & " - " & ThisItem.End
                Width: =Parent.Width
                Y: =51
                ZIndex: =2

            RSVPNavButtn As button:
                BorderColor: =ColorFade(Self.Fill, -10%)
                BorderThickness: =4
                Color: =RGBA(0, 0, 0, 1)
                Fill: =RGBA(222, 222, 222, 1)
                Height: =42
                OnSelect: =
                Size: =24
                Text: ="RSVP"
                Width: =150
                X: =(Parent.Width - Self.Width) / 2
                Y: =125 +Parent.Y
                ZIndex: =3

            NameOfEvent As label:
                Align: =Align.Center
                Height: =46
                OnSelect: =Select(Parent)
                Size: =21
                Text: =ThisItem.Subject
                Width: =Parent.Width
                Y: =16
                ZIndex: =4

            separator_2 As rectangle:
                Fill: =RGBA(25, 53, 110, 1)
                Height: =2
                OnSelect: =Select(Parent)
                Width: =Max(App.Width, App.MinScreenWidth)
                X: =(Parent.Width - Self.Width) / 2
                Y: =220
                ZIndex: =5

            sideSeparator_2 As rectangle:
                Fill: =RGBA(25, 53, 110, 1)
                Height: =Parent.Height / 3
                OnSelect: =Select(Parent)
                Width: =2
                Y: =28
                ZIndex: =6

            SelectItemLabel As label:
                Height: =120
                OnSelect: =Select(Parent)
                Size: =21
                Text: =If(_showLoading, "Loading events...", "No events scheduled")
                Visible: =IsBlank(_userDomain)
                Width: =366
                X: =246
                Y: =28
                ZIndex: =8

            Group1 As group:
                Height: =5
                Width: =5
                X: =40
                Y: =40
                ZIndex: =10

                LocationLabel As label:
                    Align: =Align.Center
                    Height: =60
                    OnSelect: =Select(Parent)
                    Size: =21
                    Text: =ThisItem.Location
                    Width: =233
                    X: =(Parent.Width + Self.Width)/2
                    Y: =116
                    ZIndex: =7

                iconLocation3_1 As icon.Waypoint:
                    Color: =RGBA(0, 0, 0, 1)
                    FocusedBorderThickness: =4
                    Height: =50
                    Icon: =Icon.Waypoint
                    OnSelect: =Select(LocationLabel)
                    TabIndex: =0
                    Width: =33
                    X: =LocationLabel.X
                    Y: =118
                    ZIndex: =9

    Timer1_1 As timer:
        AutoPause: =false
        AutoStart: =true
        DisplayMode: =DisplayMode.View
        Duration: =30000
        Height: =70
        OnTimerEnd: =Clear(MyCalendarEvents)
        Repeat: =true
        Visible: =false
        Width: =280
        X: =360
        Y: =48
        ZIndex: =2

    HeaderCont_1 As groupContainer.manualLayoutContainer:
        Height: =111
        Width: =Parent.Width
        ZIndex: =3

        "'Background Color_13' As rectangle":
            BorderStyle: =BorderStyle.None
            Fill: =RGBA(25, 53, 110, 1)
            Height: =111
            Width: =Parent.Width
            ZIndex: =1

        HeaderTitleLabel_1 As label:
            Align: =Align.Center
            Color: =RGBA(255, 255, 255, 1)
            Font: =Font.Lato
            Height: =111
            Size: =26
            Text: ="Schedule"
            Width: =Parent.Width
            ZIndex: =2

        "'Back Button_10' As icon.ArrowLeft":
            Color: =RGBA(255, 255, 255, 1)
            Height: =43
            Icon: =Icon.ArrowLeft
            OnSelect: =Back( ScreenTransition.Cover)
            Width: =40
            X: =27
            Y: =30
            ZIndex: =3

        Toggle2 As toggleSwitch:
            Color: =RGBA(255, 255, 255, 1)
            FalseText: ="List View"
            Height: =51
            OnChange: =Set(isListViewOpen, !isListViewOpen);
            OnCheck: =
            OnSelect: =
            Reset: =true
            Size: =18
            TrueText: ="List View"
            Width: =189
            X: =451
            Y: =30
            ZIndex: =5

    CalendarCont_1 As groupContainer.manualLayoutContainer:
        DropShadow: =DropShadow.Regular
        Height: =652
        Width: =Parent.Width
        ZIndex: =4

        LblMonthSelected3_2 As label:
            Align: =Align.Center
            Font: =Font.Lato
            Height: =64
            Size: =21
            Text: =Text(_firstDayOfMonth, "mmmm yyyy")
            Visible: =!_calendarVisibles
            Width: =Parent.Width
            Wrap: =false
            Y: =111
            ZIndex: =1

        iconPrevMonth3_2 As icon.ChevronLeft:
            Icon: =Icon.ChevronLeft
            OnSelect: |-
                =/*changes month view to previous month*/
                           
                Set(_firstDayOfMonth, DateAdd(_firstDayOfMonth, -1, TimeUnit.Months));           
                Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));           
                Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days));           
                /*collects calendar events for all days in current month view. Updates _minDate to prevent duplicate data collection if user returns to this month view*/           
                If(_minDate > _firstDayOfMonth,           
                 Collect(MyCalendarEvents, Office365Outlook.GetEventsCalendarViewV2("Calendar", Text(_firstDayInView, DateTimeFormat.UTC), Text(DateAdd(_minDate, -1, TimeUnit.Days), DateTimeFormat.UTC)).value);           
                 Set(_minDate, _firstDayInView))
            PaddingBottom: =10
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =10
            TabIndex: =0
            Tooltip: ="View previous month"
            Visible: =_calendarVisible
            Width: =91
            Y: =111
            ZIndex: =2

        iconNextMonth3_2 As icon.ChevronRight:
            Icon: =Icon.ChevronRight
            OnSelect: |-
                =/*changes month view to next month*/
                           
                Set(_firstDayOfMonth, DateAdd(_firstDayOfMonth, 1, TimeUnit.Months));           
                Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));           
                /*collects calendar events for all days in current month view. Updates _maxDate to prevent duplicate data collection if user returns to this month view*/           
                Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days));           
                If(_maxDate < _lastDayOfMonth,           
                 Collect(MyCalendarEvents, Office365Outlook.GetEventsCalendarViewV2("Calendar", Text(DateAdd(_maxDate, 1, TimeUnit.Days), DateTimeFormat.UTC), DateAdd(_firstDayInView, 40, TimeUnit.Days)).value);           
                 Set(_maxDate, DateAdd(_firstDayInView, 40, TimeUnit.Days)))
            PaddingBottom: =10
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =10
            TabIndex: =0
            Tooltip: ="View next month"
            Visible: =_calendarVisible
            Width: =91
            X: =Parent.Width - Self.Width
            Y: =111
            ZIndex: =3

        RectCalendarEventsHeader3_2 As rectangle:
            Height: =LblCalendarEventsHeader3_2.Height
            Visible: =_calendarVisible
            Width: =LblCalendarEventsHeader3_2.Width
            X: =LblCalendarEventsHeader3_2.X
            Y: =590
            ZIndex: =6

        LblCalendarEventsHeader3_2 As label:
            Align: =Align.Center
            Font: =Font.Lato
            Height: =52
            PaddingLeft: =30
            Size: =21
            Text: =Text(_dateSelected, DateTimeFormat.LongDate)
            Visible: =_calendarVisible
            Width: =Parent.Width
            Wrap: =false
            Y: =590
            ZIndex: =7

        MonthDayGallery3_1 As gallery.MonthDayGallery:
            AccessibleLabel: ="Days of selected month"
            Height: =342
            Items: =[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19, 20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41]
            Layout: =Layout.Vertical
            ShowScrollbar: =false
            TemplatePadding: =0
            TemplateSize: =65
            Visible: =_calendarVisible
            Width: =Parent.Width
            WrapCount: =7
            Y: =248
            ZIndex: =8

            Circle4_1 As circle:
                Fill: |-
                    =If(
                        CountRows(Filter(MyCalendarEvents, DateValue(Text(Start)) = DateAdd(_firstDayInView, ThisItem.Value, TimeUnit.Days) && "mcle" in Lower(Subject))) > 0, 
                        Color.Green, 
                        CountRows(Filter(MyCalendarEvents, DateValue(Text(Start)) = DateAdd(_firstDayInView, ThisItem.Value, TimeUnit.Days) && "safety" in Lower(Subject))) > 0,
                        Color.Red, 
                        Color.Black 
                    )
                Height: =Self.Width
                OnSelect: =Select(Parent)
                Visible: |-
                    =CountRows(Filter(MyCalendarEvents, 
                        DateValue(Start) = DateAdd(_firstDayInView, ThisItem.Value, TimeUnit.Days) 
                        && StartsWith(Subject, "Training")
                    )) > 0 && !Subcircle3_1.Visible && Title9_1.Visible
                Width: =6.5
                X: =MonthDayGallery3_1.TemplateWidth / 2 - Self.Width / 2
                Y: =MonthDayGallery3_1.TemplateHeight * (0.75)
                ZIndex: =1

            Subcircle3_1 As circle:
                Height: =3 * Title9_1.Size
                OnSelect: =Select(Parent)
                Visible: =And(DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, Title9_1.Visible)
                Width: =Self.Height
                X: =MonthDayGallery3_1.TemplateWidth/2 - Self.Width/2
                Y: =MonthDayGallery3_1.TemplateHeight / 2 - Self.Height / 2
                ZIndex: =2

            Title9_1 As label:
                Align: =Align.Center
                BorderColor: =RGBA(0, 0, 0, 0)
                Color: =If(DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, RGBA(255, 255, 255, 1), DateAdd(_firstDayInView, ThisItem.Value) = Today(), RGBA(47, 41, 43, 1), LblMonthSelected3.Color)
                Fill: |-
                    =/*Fill value changes if the gallery item day = today, or if it lies outside of the current month*/             
                    If(
                        /*Date selected is today*/
                        DateAdd(_firstDayInView, ThisItem.Value) = Today() && DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, RGBA(0,0,0,0),
                        /*Today when it is not selected*/
                        DateAdd(_firstDayInView, ThisItem.Value) = Today(), ColorFade(Subcircle3_1.Fill, 0.67), 
                        /*The day is outside the range of the currently selected month*/
                        Abs(Self.Text - ThisItem.Value) > 10,RGBA(200, 200, 200, 0.3), RGBA(0, 0, 0, 0))
                FocusedBorderColor: =Self.Color
                FocusedBorderThickness: =2
                Font: =Font.Lato
                Height: =65
                OnSelect: =Set(_dateSelected, DateAdd(_firstDayInView, ThisItem.Value, TimeUnit.Days))
                Size: =17 * MonthDayGallery3_1.TemplateWidth / 91
                TabIndex: =0
                Text: =Day(DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days))
                Visible: |-
                    =/*This item is in a row containing no days of the visible month. It is in the row after the row where the last day of the month occurs*/ 
                     !(DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days) - Weekday(DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days)) + 1 > _lastDayOfMonth)
                Width: =91.42857142857143
                Wrap: =false
                ZIndex: =3

    WeekTitleCont As groupContainer.manualLayoutContainer:
        Height: =47
        Width: =Parent.Width
        Y: =198
        ZIndex: =5

        WeekdayGallery3_3 As gallery.WeekdayGallery:
            AccessibleLabel: ="Days of the week"
            Height: =45
            Items: =Calendar.WeekdaysShort()
            ShowScrollbar: =false
            TemplatePadding: =0
            TemplateSize: =91
            Visible: =_calendarVisible
            Width: =Parent.Width
            Y: =2
            ZIndex: =1

            Title8_3 As label:
                Align: =Align.Center
                Font: =Font.Lato
                Height: =WeekdayGallery3_3.TemplateHeight
                OnSelect: =Select(Parent)
                Size: =17 * WeekdayGallery3_3.TemplateWidth / 77
                Text: =ThisItem.Value
                Width: =Parent.Width - 515
                Wrap: =false
                Y: =WeekdayGallery3_3.TemplateHeight / 2 - Self.Height / 2
                ZIndex: =1

    ListViewCont As groupContainer.manualLayoutContainer:
        Height: =1136
        Visible: =isListViewOpen
        Width: =Parent.Width
        ZIndex: =6

        Rectangle1 As rectangle:
            Fill: =RGBA(255, 255, 255, 1)
            Height: =Parent.Height
            Width: =Parent.Width
            ZIndex: =1

        EventListCont As groupContainer.manualLayoutContainer:
            Height: =If(filterIcon, Parent.Height+ filterSectionRectangle.Height, Parent.Height + HeaderCont.Height)
            Width: =640
            Y: =If(filterIcon, FilterCont.Height, HeaderCont.Height)
            ZIndex: =2

            Gallery2_1 As gallery.variableTemplateHeightGallery:
                DelayItemLoading: =true
                Height: =If(filterIcon, Parent.Height+ filterSectionRectangle.Height, Parent.Height + HeaderCont.Height)
                Layout: =Layout.Vertical
                LoadingSpinner: =LoadingSpinner.Data
                TemplateFill: =If(ThisItem.IsSelected, Color.AliceBlue, RGBA(0, 0, 0, 0))
                TemplatePadding: =0
                TemplateSize: =344
                Transition: =Transition.Pop
                Y: =
                ZIndex: =1

                CourseTypeLabel_1 As label:
                    Height: =32
                    OnSelect: =Select(Parent)
                    Size: =21
                    Text: |-
                        ="Course Type:         " & ThisItem.CourseType
                    Width: =560
                    X: =40
                    Y: =82
                    ZIndex: =1

                CourseTitleLabel_1 As label:
                    Height: =32
                    OnSelect: =Select(Parent)
                    Size: =21
                    Text: |-
                        ="Course Title:          " & ThisItem.CourseTitle
                    Width: =560
                    X: =40
                    Y: =28
                    ZIndex: =2

                CoursePresenterLabel_1 As label:
                    Height: =32
                    OnSelect: =Select(Parent)
                    Size: =21
                    Text: |-
                        ="Presenter:              " & ThisItem.'Presenter/Panelist'
                    Width: =560
                    X: =40
                    Y: =190
                    ZIndex: =3

                CourseDateLabel_1 As label:
                    Height: =32
                    OnSelect: =Select(Parent)
                    Size: =21
                    Text: |-
                        ="Course Date:         " &"📆 "& ThisItem.CourseDate
                    Width: =560
                    X: =40
                    Y: =135
                    ZIndex: =4

                CourseFormatLabel_1 As button:
                    Fill: =Switch(ThisItem.CourseFormat.Value, "Online", Color.LightGreen, "In-person", Color.LightBlue, "Hybrid", Color.DarkSalmon)
                    Height: =52
                    OnSelect: =Select(Parent)
                    Size: =24
                    Text: =ThisItem.CourseFormat.Value
                    Width: =212
                    X: =57
                    Y: =252
                    ZIndex: =5

                CourseStatusLabel_1 As label:
                    Color: =Switch(ThisItem.CourseStatus.Value, "Available", Color.Blue, "Completed", Color.Green, "In-progress", Color.Orange)
                    OnSelect: =Select(Parent)
                    Size: =21
                    Text: =ThisItem.CourseStatus.Value
                    Width: =236
                    X: =384
                    Y: =252
                    ZIndex: =6

                separator_1 As rectangle:
                    Fill: =RGBA(25, 53, 110, 1)
                    Height: =2
                    OnSelect: =Select(Parent)
                    Width: =538
                    X: =40
                    Y: =334
                    ZIndex: =7

                sideSeparator_1 As rectangle:
                    Fill: =RGBA(25, 53, 110, 1)
                    Height: =279
                    OnSelect: =Select(Parent)
                    Width: =5
                    X: =23
                    Y: =28
                    ZIndex: =8

                btnTemplate_1 As button:
                    Fill: =Color.Transparent
                    Height: =Parent.TemplateHeight
                    HoverFill: =ColorFade(Self.Fill, -20%)
                    OnSelect: =Select(Parent)
                    PressedFill: =ColorFade(Self.Fill, -30%)
                    Size: =24
                    Text: ="Button"
                    Width: =Parent.TemplateWidth
                    ZIndex: =9

        FilterCont As groupContainer.manualLayoutContainer:
            Height: =377
            Width: =640
            ZIndex: =3

            filterSectionRectangle_1 As rectangle:
                Fill: =RGBA(130, 146, 179, 1)
                Height: =282
                Visible: =filterIcon
                Width: =640
                Y: =100
                ZIndex: =1

            Label8_1 As label:
                Align: =Align.Center
                Size: =21
                Text: ="Status"
                Visible: =filterIcon
                Width: =203
                X: =40
                Y: =110
                ZIndex: =2

            ResetButton_1 As button:
                Fill: =RGBA(25, 53, 110, 1)
                Height: =52
                OnSelect: =Reset(statusDropdown_1); Clear(colTaskStatusFilter)
                Size: =24
                Text: ="Reset"
                Visible: =filterIcon
                Width: =165
                X: =455
                Y: =161
                ZIndex: =3

            statusDropdown_1 As combobox:
                ChevronBackground: =RGBA(25, 53, 110, 1)
                DisplayFields: =["Value"]
                Height: =60
                IsSearchable: =false
                Items: =Choices(Courses.CourseStatus)
                SearchFields: =["Value"]
                SearchItems: =[]
                SelectionFill: =RGBA(25, 53, 110, 1)
                SelectMultiple: =false
                Size: =21
                Visible: =filterIcon
                Width: =261
                X: =40
                Y: =161
                ZIndex: =4

            ComboBox1_1 As combobox:
                ChevronBackground: =RGBA(25, 53, 110, 1)
                DefaultSelectedItems: =colTaskStatusFilter.Value
                DisplayFields: =["Value"]
                Height: =60
                Items: =Choices(Courses.CourseFormat)
                SearchFields: =["Value"]
                SearchItems: =Choices(Courses.CourseFormat,ComboBox1_1.SearchText)
                SelectionFill: =RGBA(25, 53, 110, 1)
                Size: =21
                Visible: =false
                Width: =293
                X: =327
                Y: =40
                ZIndex: =5

            Gallery5_2 As gallery.galleryHorizontal:
                DelayItemLoading: =true
                Height: =382
                Items: =Choices(Courses.CourseFormat)
                LoadingSpinner: =LoadingSpinner.Data
                TemplateSize: =192
                Visible: =filterIcon
                ZIndex: =6

                Checkbox1_2 As checkbox:
                    CheckboxSize: =50
                    Default: =ThisItem in colTaskStatusFilter
                    Height: =85
                    OnCheck: =Collect(colTaskStatusFilter, ThisItem)
                    OnSelect: =Select(Parent)
                    OnUncheck: =Remove(colTaskStatusFilter, ThisItem)
                    Size: =19
                    Text: =ThisItem.Value
                    Width: =192
                    Y: =234
                    ZIndex: =1

            FilterIcon As icon.Filter:
                Color: =RGBA(255, 255, 255, 1)
                Height: =52
                Icon: =Icon.Filter
                OnSelect: |-
                    =UpdateContext({filterIcon: !filterIcon})
                Width: =48
                X: =195
                Y: =25
                ZIndex: =7

        HeaderCont As groupContainer.manualLayoutContainer:
            Height: =110
            Width: =640
            ZIndex: =4

            HeaderBckground As rectangle:
                Fill: =RGBA(25, 53, 110, 1)
                Width: =640
                ZIndex: =1

            EventsTitle_1 As label:
                Align: =Align.Center
                Color: =RGBA(255, 255, 255, 1)
                Font: =Font.Lato
                Height: =74
                Size: =25
                Text: ="Events"
                Width: =112
                X: =81
                Y: =15
                ZIndex: =2

            arrowback_1 As icon.ArrowLeft:
                Color: =RGBA(255, 255, 255, 1)
                Height: =43
                Icon: =Icon.ArrowLeft
                OnSelect: =Navigate(TrainingTrackerHome, ScreenTransition.Cover)
                Width: =48
                X: =22
                Y: =30
                ZIndex: =3

            SearchIcon As icon.Search:
                Color: =RGBA(255, 255, 255, 1)
                Height: =52
                Icon: =Icon.Search
                OnSelect: |-
                    =UpdateContext({searchIcon: !searchIcon})
                Width: =48
                X: =585
                Y: =26
                ZIndex: =4

            searchInput_1 As text:
                Default: =""
                Height: =58
                HintText: ="search"
                Size: =21
                Visible: =searchIcon
                Width: =151
                X: =423
                Y: =23
                ZIndex: =5

            Toggle2_1 As toggleSwitch:
                Color: =RGBA(255, 255, 255, 1)
                FalseText: ="Calendar View"
                Height: =48
                OnChange: =Set(isListViewOpen, !isListViewOpen);
                OnCheck: =
                OnSelect: =
                Reset: =true
                Size: =16
                TrueText: ="Calendar View"
                Width: =189
                X: =241
                Y: =27
                ZIndex: =7

            FilterIcon_1 As icon.Filter:
                Color: =RGBA(255, 255, 255, 1)
                Height: =52
                Icon: =Icon.Filter
                OnSelect: |-
                    =UpdateContext({filterIcon: !filterIcon})
                Width: =48
                X: =193
                Y: =26
                ZIndex: =8

