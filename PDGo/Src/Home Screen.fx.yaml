"'Home Screen' As screen":
    OnVisible: |+
        =Set(
            IsSidebarOpen,
            false
        );
        
         Set(IsSidebarNotOpen, If('Home Screen'.Width < 600, 100, 20));
           
        Set(
            var1,
            GetMods.Run()
        );
        Set(
            UserData,
            LookUp(
                Users,
                'Email Address' = User().Email
            )
        );
        UpdateContext({items: var1});
        ClearCollect(
            Columns,
            {
                var: "aa",
                Bool: false,
                int: 1
            }
        );
        ClearCollect(
            af1,
            {
                uID: "1",
                id: false,
                title: false,
                Fname: false,
                PhoneN: false,
                EA: false,
                AM: false,
                Tid: false,
                Sup: false,
                UType: false,
                Author: false
            }
        );
        ClearCollect(
            af2,
            {
                FullN: "aa",
                varName: "aa",
                id: 1
            }
        );
        Clear(af2);
        Clear(af1);
        ForAll(
            Filter(
                Split(
                    " {" & items.jsonstrings,
                    "{"
                ),
                Boolean(ParseJSON("{"" "": true }").bool) in Value
            ) As af,
            If(
                "true" in af.Value,
                Patch(
                    af1,
                    Defaults(af1),
                    {
                        uID: Value(ParseJSON("{" & af.Value).UserID),
                        id: Boolean(ParseJSON("{" & af.Value).ID),
                        title: Boolean(ParseJSON("{" & af.Value).Title),
                        Fname: Boolean(ParseJSON("{" & af.Value).'Full Name'),
                        PhoneN: Boolean(ParseJSON("{" & af.Value).'Phone Number'),
                        EA: Boolean(ParseJSON("{" & af.Value).'Email Address'),
                        AM: Boolean(ParseJSON("{" & af.Value).'About Me'),
                        Tid: Boolean(ParseJSON("{" & af.Value).'Team ID'),
                        Sup: Boolean(ParseJSON("{" & af.Value).Supervisor),
                        UType: Boolean(ParseJSON("{" & af.Value).'User Type'),
                        Author: Boolean(ParseJSON("{" & af.Value).Author)
                    }
                )
            )
        );
        ForAll(
            af1,
            If(
                id = true,
                Collect(
                    af2,
                    {
                        FullN: LookUp(
                            Users,
                            ID = uID,
                            'Full Name'
                        ),
                        varName: "id"
                    }
                )
            );
            If(
                title = true,
                Collect(
                    af2,
                    {
                        FullN: LookUp(
                            Users,
                            ID = uID,
                            'Full Name'
                        ),
                        varName: "title"
                    }
                )
            );
            If(
                Fname = true,
                Collect(
                    af2,
                    {
                        FullN: LookUp(
                            Users,
                            ID = uID,
                            'Full Name'
                        ),
                        varName: "Full Name"
                    }
                )
            );
            If(
                PhoneN = true,
                Collect(
                    af2,
                    {
                        FullN: LookUp(
                            Users,
                            ID = uID,
                            'Full Name'
                        ),
                        varName: "Phone Number"
                    }
                )
            );
            If(
                EA = true,
                Collect(
                    af2,
                    {
                        FullN: LookUp(
                            Users,
                            ID = uID,
                            'Full Name'
                        ),
                        varName: "Email Address"
                    }
                )
            );
            If(
                AM = true,
                Collect(
                    af2,
                    {
                        FullN: LookUp(
                            Users,
                            ID = uID,
                            'Full Name'
                        ),
                        varName: "About Me"
                    }
                )
            );
            If(
                Tid = true,
                Collect(
                    af2,
                    {
                        FullN: LookUp(
                            Users,
                            ID = uID,
                            'Full Name'
                        ),
                        varName: "Tid"
                    }
                )
            );
            If(
                Sup = true,
                Collect(
                    af2,
                    {
                        FullN: LookUp(
                            Users,
                            ID = uID,
                            'Full Name'
                        ),
                        varName: "Supervisor"
                    }
                )
            );
            If(
                UType = true,
                Collect(
                    af2,
                    {
                        FullN: LookUp(
                            Users,
                            ID = uID,
                            'Full Name'
                        ),
                        varName: "User Type"
                    }
                )
            );
            If(
                Author = true,
                Collect(
                    af2,
                    {
                        FullN: LookUp(
                            Users,
                            ID = uID,
                            'Full Name'
                        ),
                        varName: "Author"
                    }
                )
            );
            
        );
        ClearCollect(
            JoinTime,
            ForAll(
                TimeOffRequestDays,
                {
                    StartDates: StartDate,
                    EndDates: EndDate,
                    Status: LookUp(
                        TimeOffRequests,
                        "Status" = "Status",
                        Status
                    ).Value,
                    ReqID: LookUp(
                        TimeOffRequests,
                        "Requestor" = "Requestor",
                        Requester
                    ),
                    IDs: LookUp(
                        Users,
                        "ID" = "ID",
                        ID
                    )
                }
            )
        );
        ClearCollect(
            JoinFacNUsr,
            ForAll(
                'Facility Request_1',
                {
                    ReqName: 'Requester Name',
                    Status1: 'Status (Status0)'.Value,
                    Email: 'Requester Email',
                    'Request Title': 'Request Title',
                    FullN: LookUp(
                        Users,
                        "Full Name" = "Full Name",
                        'Full Name'
                    ),
                    ProPic: LookUp(
                        Users,
                        "Profile Picture" = "Profile Picture",
                        'Profile Picture'
                    )
                }
            )
        );
        

    Label1 As label:
        Align: =Align.Center
        Color: =RGBA(255, 255, 255, 1)
        Height: =481
        OnSelect: =Navigate(Profile, ScreenTransition.CoverRight)
        Size: =21
        Text: ="Profile"
        Width: =516
        X: =69
        Y: =69
        ZIndex: =1

    bannerContainerHomeScreen As groupContainer.manualLayoutContainer:
        Height: =433
        Width: =Parent.Width
        ZIndex: =2

        BannerLogoHomeScreen As image:
            Height: =434
            Image: =PDGoLogo
            ImagePosition: =ImagePosition.Fill
            Width: =640
            ZIndex: =1

        ProNavFrmHomePage As icon.Person:
            Color: =RGBA(255, 255, 255, 1)
            Icon: =Icon.Person
            OnSelect: |+
                =Navigate(Profile, ScreenTransition.CoverRight);
                
                
            X: =556
            Y: =370
            ZIndex: =2

    UpcomingFeed As groupContainer.manualLayoutContainer:
        Height: =702
        Width: =Parent.Width 
        Y: =BannerLogoHomeScreen.Height
        ZIndex: =3

        Rectangle2_4 As rectangle:
            BorderColor: =RGBA(101, 128, 187, 1)
            DisabledFill: =Rectangle2_4.Fill
            Fill: =RGBA(221, 224, 227, 1)
            FocusedBorderColor: =Rectangle2_4.BorderColor
            FocusedBorderThickness: =0
            Height: =1
            HoverFill: =Rectangle2_4.Fill
            PressedFill: =Rectangle2_4.Fill
            Width: =544
            X: =48
            Y: =66
            ZIndex: =3

        FeedHeader As button:
            BorderColor: =ColorFade(FeedHeader.Fill, -15%)
            Color: =RGBA(255,255,255,1)
            DisabledBorderColor: =ColorFade(FeedHeader.BorderColor, 70%)
            DisabledColor: =ColorFade(RGBA(47, 41, 43, 1), 70%)
            DisabledFill: =ColorFade(RGBA(159, 167, 165, 1), 50%)
            DisplayMode: =DisplayMode.View
            Fill: =RGBA(245, 247, 249, 1)
            FocusedBorderColor: =FeedHeader.BorderColor
            FocusedBorderThickness: =0
            Height: =66
            HoverBorderColor: =ColorFade(FeedHeader.BorderColor, 20%)
            HoverColor: =FeedHeader.Color
            HoverFill: =ColorFade(FeedHeader.Fill, 20%)
            PressedBorderColor: =FeedHeader.Fill
            PressedColor: =FeedHeader.Fill
            PressedFill: =FeedHeader.Color
            RadiusBottomLeft: =4
            RadiusBottomRight: =4
            RadiusTopLeft: =4
            RadiusTopRight: =4
            Text: =""
            Width: =Parent.Width
            Y: =
            ZIndex: =4

        Cont4Feeds As groupContainer.horizontalAutoLayoutContainer:
            Height: =311 + UpcomingFeed.Height
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMode: =LayoutMode.Auto
            LayoutOverflowX: =LayoutOverflow.Scroll
            LayoutOverflowY: =LayoutOverflow.Scroll
            LayoutWrap: =true
            Width: =640
            Y: =67
            ZIndex: =5

            "Feed As gallery.'BrowseLayout_Vertical_ThreeTextOneImageVariant_ver5.0'":
                AlignInContainer: =AlignInContainer.Center
                BorderColor: =RGBA(202, 202, 202, 1)
                BorderThickness: =5
                DelayItemLoading: =true
                FillPortions: =0
                Height: =Parent.Height
                Items: =FirstN(MCLETrainings_1,8)
                Layout: =Layout.Vertical
                LayoutMinHeight: =0
                LoadingSpinner: =LoadingSpinner.Data
                TemplatePadding: =0
                TemplateSize: =116
                Width: =Parent.Width
                ZIndex: =1

                Image2 As image:
                    DisplayMode: =DisplayMode.View
                    Height: =84
                    Image: =ThisItem.VideoIcon
                    OnSelect: =Select(Parent)
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Width: =84
                    X: =16
                    Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
                    ZIndex: =1

                Title2 As label:
                    FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                    Height: =Self.Size * 1.8
                    OnSelect: =Select(Parent)
                    Overflow: =Overflow.Scroll
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Size: =12
                    Text: =ThisItem.Training
                    VerticalAlign: =VerticalAlign.Top
                    Width: =Parent.TemplateWidth - 185
                    X: =115
                    Y: =(Parent.TemplateHeight - (Self.Size*1.8 + Subtitle2.Size*1.8 + 2 + Body1.Size*1.8)) / 2
                    ZIndex: =2

                Subtitle2 As label:
                    FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                    Height: =Self.Size * 1.8
                    OnSelect: =Select(Parent)
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =ThisItem.TrainingType
                    VerticalAlign: =VerticalAlign.Top
                    Width: =Title2.Width
                    X: =Title2.X
                    Y: =Title2.Y + Title2.Height
                    ZIndex: =3

                Body1 As label:
                    FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                    Height: =Self.Size * 1.8
                    OnSelect: =Select(Parent)
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =ThisItem.Title
                    VerticalAlign: =VerticalAlign.Top
                    Width: =Subtitle2.Width
                    X: =Title2.X
                    Y: =Subtitle2.Y + Subtitle2.Height
                    ZIndex: =4

                NextArrow2 As icon.ChevronRight:
                    AccessibleLabel: =Self.Tooltip
                    Color: =RGBA(166, 166, 166, 1)
                    Height: =50
                    Icon: =Icon.ChevronRight
                    OnSelect: =Select(Parent)
                    PaddingBottom: =16
                    PaddingLeft: =16
                    PaddingRight: =16
                    PaddingTop: =16
                    Tooltip: ="View item details"
                    Width: =50
                    X: =Parent.TemplateWidth - Self.Width - 12
                    Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
                    ZIndex: =5

                Separator2 As rectangle:
                    Fill: =RGBA(237, 237, 237, 1)
                    Height: =4
                    OnSelect: =Select(Parent)
                    Width: =Parent.TemplateWidth
                    Y: =Parent.TemplateHeight - Self.Height
                    ZIndex: =6

                Rectangle2 As rectangle:
                    Height: =Parent.TemplateHeight - Separator2.Height
                    OnSelect: =Select(Parent)
                    Visible: =ThisItem.IsSelected
                    Width: =4
                    ZIndex: =7

        FeedTitle As label:
            Align: =Align.Center
            BorderColor: =RGBA(101, 128, 187, 1)
            Color: =RGBA(41, 40, 55, 1)
            DisabledColor: =ColorFade(RGBA(47, 41, 43, 1), 70%)
            FocusedBorderColor: =FeedTitle.BorderColor
            Height: =38
            HoverBorderColor: =FeedTitle.BorderColor
            HoverColor: =FeedTitle.Color
            HoverFill: =FeedTitle.Fill
            PressedBorderColor: =FeedTitle.BorderColor
            PressedColor: =FeedTitle.Color
            PressedFill: =FeedTitle.Fill
            Size: =18
            Text: ="Announcements!"
            Width: =UpcomingFeed.Width
            Y: =15
            ZIndex: =6

    SideBarContainer As groupContainer.manualLayoutContainer:
        DropShadow: =DropShadow.Bold
        Fill: =RGBA(25, 53, 110, 1)
        Height: =Parent.Height
        Visible: =IsSidebarOpen
        Width: =Parent.Width/2
        ZIndex: =4

        SideBarCont As groupContainer.verticalAutoLayoutContainer:
            Height: =622
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMode: =LayoutMode.Auto
            Width: =Parent.Width
            Y: =310
            ZIndex: =13

            MyProfileCont As groupContainer.horizontalAutoLayoutContainer:
                Height: =80
                LayoutMinHeight: =70
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                ZIndex: =1

                ProNavFrmHomePageIcon As icon.Person:
                    Color: =RGBA(255, 255, 255, 1)
                    Icon: =Icon.Person
                    OnSelect: =
                    Y: =356
                    ZIndex: =1

                ProfileButtonHome As button:
                    Fill: =RGBA(27, 49, 89, 1)
                    Height: =70
                    LayoutMinHeight: =70
                    LayoutMinWidth: =280
                    OnSelect: |+
                        =Navigate(Profile, ScreenTransition.CoverRight);
                        
                        
                    Size: =22
                    Text: ="My Profile"
                    Width: =Parent.Width -ProNavFrmHomePageIcon.Width
                    Y: =356
                    ZIndex: =2

            TrainTrackCont As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                FillPortions: =0
                Height: =80
                LayoutMinHeight: =112
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width
                ZIndex: =2

                TrainTrackIcon As icon.DocumentwithContent:
                    Color: =RGBA(255, 255, 255, 1)
                    Height: =70
                    Icon: =Icon.DocumentWithContent
                    Width: =63
                    X: =1
                    Y: =634
                    ZIndex: =1

                NavToTrainTrack As button:
                    Fill: =RGBA(27, 49, 89, 1)
                    Height: =63
                    LayoutMinHeight: =70
                    LayoutMinWidth: =280
                    OnSelect: |+
                        =Navigate(TrainingTrackerHome, ScreenTransition.CoverRight);
                        
                        
                    Size: =22
                    Text: ="Training Tracker"
                    Width: =Parent.Width - TrainTrackIcon.Width
                    X: =64
                    Y: =704
                    ZIndex: =2

            TimeOffCont As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                Height: =80
                LayoutMinHeight: =80
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width
                ZIndex: =3

                TimeOffRequestsIcon As icon.DocumentwithContent:
                    Color: =RGBA(255, 255, 255, 1)
                    Height: =70
                    Icon: =Icon.DocumentWithContent
                    Width: =63
                    X: =1
                    Y: =634
                    ZIndex: =1

                TimeOffRequestsButton As button:
                    AlignInContainer: =AlignInContainer.Start
                    Fill: =RGBA(27, 49, 89, 1)
                    Height: =68
                    LayoutMinHeight: =70
                    LayoutMinWidth: =280
                    OnSelect: |+
                        =Navigate('TO Request List Screen', ScreenTransition.CoverRight);
                        
                        
                    Size: =21
                    Text: ="Time Off Requests"
                    Width: =Parent.Width - TimeOffRequestsIcon.Width
                    X: =5
                    Y: =636
                    ZIndex: =2

            FacilityReqCont As groupContainer.horizontalAutoLayoutContainer:
                Height: =80
                LayoutMinHeight: =80
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width
                ZIndex: =4

                FacilityReqIcon As icon.DocumentwithContent:
                    Color: =RGBA(255, 255, 255, 1)
                    Height: =70
                    Icon: =Icon.DocumentWithContent
                    Y: =564
                    ZIndex: =1

                "'Facility Request' As button":
                    Fill: =RGBA(27, 49, 89, 1)
                    Height: =68
                    LayoutMinHeight: =70
                    LayoutMinWidth: =280
                    OnSelect: |+
                        =NewForm('facility-form'); Navigate(FacilityRequest, ScreenTransition.CoverRight)
                        
                        
                    Size: =22
                    Text: ="Facility Request"
                    Width: =Parent.Width - FacilityReqIcon.Width
                    Y: =2
                    ZIndex: =2

            mcleCont As groupContainer.horizontalAutoLayoutContainer:
                Height: =80
                LayoutMinHeight: =80
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                ZIndex: =5

                TrainHomeIcon As icon.Notebook:
                    Color: =RGBA(255, 255, 255, 1)
                    Icon: =Icon.Notebook
                    Y: =6
                    ZIndex: =1

                TrainingHome As button:
                    Fill: =RGBA(27, 49, 89, 1)
                    Height: =70
                    LayoutMinHeight: =70
                    LayoutMinWidth: =280
                    OnSelect: |+
                        =Navigate(MCLETrainings, ScreenTransition.CoverRight);
                        
                        
                    Size: =25
                    Text: ="MCLE Training"
                    Width: =Parent.Width - TrainHomeIcon.Width
                    Y: =496
                    ZIndex: =2

            ReqTimeOffCont As groupContainer.horizontalAutoLayoutContainer:
                Height: =80
                LayoutMinHeight: =80
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                ZIndex: =6

                RTOHomeIcon As icon.DocumentwithContent:
                    Color: =RGBA(255, 255, 255, 1)
                    Height: =70
                    Icon: =Icon.DocumentWithContent
                    Y: =426
                    ZIndex: =1

                RTOHome As button:
                    Fill: =RGBA(27, 49, 89, 1)
                    Height: =70
                    LayoutMinHeight: =70
                    LayoutMinWidth: =280
                    OnSelect: |+
                        =Navigate('TO Request Screen', ScreenTransition.CoverRight);
                        
                        
                    Size: =21
                    Text: ="Request Time Off"
                    Width: =Parent.Width - RTOHomeIcon.Width
                    Y: =426
                    ZIndex: =2

    Timer1 As timer:
        AutoPause: =false
        AutoStart: =true
        DisplayMode: =DisplayMode.View
        Duration: =30000
        Height: =70
        OnTimerEnd: |
            =UpdateContext({items:GetMods.Run()});
            
            Clear(af2);
            Clear(af1);
            
            ForAll(Filter(Split(" {" & items.jsonstrings, "{"), Boolean( ParseJSON("{"" "": true }").bool ) in Value) As af,
            
             If("true" in af.Value ,
             
              Patch(af1, Defaults(af1), 
            
             {uID: Value(ParseJSON("{" & af.Value).UserID), id:Boolean(ParseJSON("{" & af.Value).ID), title:Boolean(ParseJSON("{" & af.Value).Title),Fname:Boolean(ParseJSON("{" & af.Value).'Full Name'),PhoneN:Boolean(ParseJSON("{" & af.Value).'Phone Number'),EA:Boolean(ParseJSON("{" & af.Value).'Email Address'), AM:Boolean(ParseJSON("{" & af.Value).'About Me'), Tid:Boolean(ParseJSON("{" & af.Value).'Team ID'), Sup:Boolean(ParseJSON("{" & af.Value).Supervisor),UType:Boolean(ParseJSON("{" & af.Value).'User Type'),Author:Boolean(ParseJSON("{" & af.Value).Author)} ) ));
            
             ForAll(af1,
             If( id = true, Collect(af2, { FullN: LookUp(Users,  ID = uID, 'Full Name'), varName: "id"}));  
             If( title = true, Collect(af2, { FullN: LookUp(Users,  ID = uID, 'Full Name'), varName: "title"})); 
             If( Fname = true, Collect(af2, { FullN: LookUp(Users,  ID = uID, 'Full Name'), varName: "Full Name"})); 
            If( PhoneN = true, Collect(af2, { FullN: LookUp(Users,  ID = uID, 'Full Name'), varName: "Phone Number"})); 
            If( EA = true, Collect(af2, { FullN: LookUp(Users,  ID = uID, 'Full Name'), varName: "Email Address"}));     
            If( AM = true, Collect(af2, { FullN: LookUp(Users,  ID = uID, 'Full Name'), varName: "About Me"})); 
            If( Tid = true, Collect(af2, { FullN: LookUp(Users,  ID = uID, 'Full Name'), varName: "Tid"}));
            If( Sup = true, Collect(af2, { FullN: LookUp(Users,  ID = uID, 'Full Name'), varName: "Supervisor"}));  
            If( UType = true, Collect(af2, { FullN: LookUp(Users,  ID = uID, 'Full Name'), varName: "User Type"}));  
            If( Author = true, Collect(af2, { FullN: LookUp(Users,  ID = uID, 'Full Name'), varName: "Author"}));         );
        Repeat: =true
        Visible: =false
        Width: =280
        X: =360
        Y: =8
        ZIndex: =5

    OpenSideBar As icon.Hamburger:
        Color: =RGBA(255, 255, 255, 1)
        Height: =75
        Icon: =Icon.Hamburger
        OnSelect: =Set(IsSidebarOpen, !IsSidebarOpen)
        Visible: =!IsSidebarOpen
        Width: =100
        ZIndex: =6

    CloseSideBar As icon.Cancel:
        Color: =RGBA(255, 255, 255, 1)
        Icon: =Icon.Cancel
        OnSelect: =Set(IsSidebarOpen, !IsSidebarOpen)
        Visible: =IsSidebarOpen
        X: =18
        Y: =11
        ZIndex: =7

