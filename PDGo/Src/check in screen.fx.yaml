"'check in screen' As screen":
    OnVisible: |-
        =UpdateContext({MeetingRecord: Blank()});
        UpdateContext({IsCheckIn: false});
        UpdateContext({TimerStart: false});

    Gallery1 As gallery.galleryHorizontal:
        DelayItemLoading: =true
        Items: =barCodes
        LoadingSpinner: =LoadingSpinner.Data
        TemplateSize: =If(Self.Layout = Layout.Horizontal, Min(320, Self.Width - 60), Min(320, Self.Height - 60))
        Y: =561
        ZIndex: =1

        Label5_1 As label:
            Height: =70
            OnSelect: =Select(Parent)
            Size: =21
            Text: =ThisItem.Value
            Width: =320
            Y: =40
            ZIndex: =1

        Label8 As label:
            Height: =70
            OnSelect: =Select(Parent)
            Size: =21
            Text: =ThisItem.Type
            Width: =320
            Y: =148
            ZIndex: =2

    RectQuickActionBar7 As rectangle:
        Height: =88
        Width: =Parent.Width
        Y: =40
        ZIndex: =2

    LblAppName7 As label:
        Align: =Align.Center
        Height: =88
        Size: =27
        Text: =If(IsCheckIn, "Check-Out", "Check-In")
        Width: =Parent.Width
        Y: =40
        ZIndex: =3

    Canvas4 As fluidGrid.fluidGridWithBlankCard:
        BorderThickness: =0
        Height: =Parent.Height - Self.Y
        Width: =Parent.Width
        Y: =RectQuickActionBar7.Y + RectQuickActionBar7.Height
        ZIndex: =4

        DataCard4 As dataCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            BorderThickness: =0
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =Parent.Height - 100
            Width: =Parent.Width
            X: =0
            Y: =0
            ZIndex: =1

            Label3_1 As label:
                FontWeight: =FontWeight.Bold
                Height: =72
                Size: =20
                Text: ="Scan the QR code to check in your Training"
                Width: =597
                X: =26
                Y: =40
                ZIndex: =1

            Label2_3 As label:
                Height: =55
                Size: =21
                Text: ="Don't have a QR code? Contact your trainer."
                Width: =597
                X: =26
                Y: =604
                ZIndex: =3

            Button8 As button:
                Height: =70
                OnSelect: |+
                    =UpdateContext({MeetingRecord: LookUp(MCLETrainings, 'Access Code' = TextInput2.Text)}); 
                     
                    If(!IsBlank(MeetingRecord), If( IsCheckIn, Patch(MCLETrainingAttendance, LookUp(MCLETrainingAttendance, TrainingID = MeetingRecord.ID && Attendee = User().FullName), {'Checkout Time': Now(), Attended: true });  UpdateContext({IsCheckIn:!IsCheckIn}); UpdateContext({TimerStart: true}) ,  Patch(MCLETrainingAttendance, Defaults(MCLETrainingAttendance),{Attendee: User().FullName, TrainingID: MeetingRecord.ID, 'Check-In Time': Now() });  UpdateContext({IsCheckIn:!IsCheckIn})), Notify("bad case"));
                    
                Size: =24
                Text: ="Access Code"
                Width: =280
                X: =184
                Y: =427
                ZIndex: =4

            TextInput2 As text:
                Default: =Blank() 
                Height: =74
                HintText: ="Enter Access Code"
                Size: =21
                Width: =420
                X: =114
                Y: =321
                ZIndex: =5

            Button9 As button:
                Height: =70
                OnSelect: |-
                    =UpdateContext({IsCheckIn: !IsCheckIn });
                Size: =24
                Text: ="Button"
                Width: =280
                X: =184
                Y: =534
                ZIndex: =6

    Icon5_1 As icon.ArrowLeft:
        Icon: =Icon.ArrowLeft
        OnSelect: =Back();
        Visible: =false
        Width: =106
        X: =80
        Y: =52
        ZIndex: =5

    "BarcodeReader1 As 'Barcode Reader'":
        BorderFillColor: =RGBA(47, 81, 151, 1)
        DisabledBorderColor: =RGBA(166, 166, 166, 1)
        DisabledContentColor: =RGBA(166, 166, 166, 1)
        DisabledFillColor: =RGBA(244, 244, 244, 1)
        DisplayMode: =DisplayMode.Edit
        FillColor: =RGBA(56, 96, 178, 1)
        Height: =77
        HoverBorderColor: =RGBA(88, 115, 171, 1)
        HoverContentColor: =RGBA(255, 255, 255, 1)
        HoverFillColor: =RGBA(47, 81, 151, 1)
        OnCancel: =false
        OnScan: |-
            =If(IsCheckIn, Patch(MCLETrainingAttendance, LookUp(MCLETrainingAttendance, Attendee = User().FullName && Value(Last(BarcodeReader1.Barcodes).Value) = TrainingID), {'Checkout Time':Now(), Attended: true}); UpdateContext({TimerStart: true}), 
            
            
                If(IsBlank(LookUp(MCLETrainingAttendance, Attendee = User().FullName && Value(Last(BarcodeReader1.Barcodes).Value) = TrainingID)),
             
                    Patch(MCLETrainingAttendance, Defaults(MCLETrainingAttendance), {Attendee: User().FullName, 'Check-In Time': Now(), TrainingID: Value(Last(BarcodeReader1.Barcodes).Value)}); UpdateContext({IsCheckIn:true}),
                    Patch(MCLETrainingAttendance, LookUp(MCLETrainingAttendance, Attendee = User().FullName && Value(Last(BarcodeReader1.Barcodes).Value) = TrainingID), {'Check-In Time': Now()} ); UpdateContext({IsCheckIn: true})); 
            );
            
            Collect(barCodes,{ Type: Last(BarcodeReader1.Barcodes).Type, Value: Last(BarcodeReader1.Barcodes).Value  })
        PressedBorderColor: =RGBA(56, 96, 178, 1)
        PressedContentColor: =RGBA(56, 96, 178, 1)
        PressedFillColor: =RGBA(255, 255, 255, 1)
        Text: ="Scan Code"
        TextColor: =RGBA(255, 255, 255, 1)
        Width: =452
        X: =145
        Y: =300
        ZIndex: =6

    Timer3 As timer:
        Duration: =5000
        Height: =70
        OnTimerEnd: =Navigate('MCLE Trainings', ScreenTransition.CoverRight)
        Start: =TimerStart
        Width: =280
        X: =176
        Y: =904
        ZIndex: =7

