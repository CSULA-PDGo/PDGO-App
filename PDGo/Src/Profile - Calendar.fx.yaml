"'Profile - Calendar' As screen":

    "'Background Color_1' As rectangle":
        BorderStyle: =BorderStyle.None
        Fill: =fxTheme.Header.BGColor
        Height: =111
        Width: =Parent.Width
        ZIndex: =6

    "'Back Button_1' As icon.ArrowLeft":
        Color: =RGBA(255, 255, 255, 1)
        Height: =43
        Icon: =Icon.ArrowLeft
        OnSelect: =Navigate(Profile, ScreenTransition.Cover)
        Width: =40
        X: =30
        Y: =30
        ZIndex: =7

    Label2_1 As label:
        Align: =Align.Center
        Color: =RGBA(255, 255, 255, 1)
        Font: =Font.Lato
        Height: =70
        Size: =26
        Text: ="Schedule"
        Width: =357
        X: =(Parent.Width - Self.Width)/2
        Y: =20
        ZIndex: =8

    dropdownCalendarSelection3 As dropdown:
        Default: =_myCalendar.DisplayName
        Height: =60
        Items: =Office365Outlook.CalendarGetTables().value
        OnChange: =Select(dropdownCalendarSelection3)
        OnSelect: |-
            =/*retrieves calendar events for all days in current month view and selected calendar 
            _minDate and _maxDate act as markers to prevent duplicate data collection*/         
            If(IsBlank(_userDomain),         
            	UpdateContext({_showLoading: true});         
            	Set(_userDomain, Right(User().Email, Len(User().Email) - Find("@", User().Email)));         
            	Set(_dateSelected, Today());         
            	Set(_firstDayOfMonth, DateAdd(Today(), 1 - Day(Today()), TimeUnit.Days));         
            	Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));         
            	Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days))         
            );         
            Set(_calendarVisible, false);         
            UpdateContext({_showLoading: true});         
            Set(_myCalendar, Self.Selected);         
            Set(_minDate, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));         
            Set(_maxDate, DateAdd(DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days), 40, TimeUnit.Days));         
            ClearCollect(MyCalendarEvents, Office365Outlook.GetEventsCalendarViewV2(_myCalendar.Name, Text(_minDate, DateTimeFormat.UTC), Text(_maxDate, DateTimeFormat.UTC)).value);         
            UpdateContext({_showLoading: false});         
            Set(_calendarVisible, true)
        Size: =21
        Tooltip: ="Select a calendar"
        Width: =470
        X: =34
        Y: =128
        ZIndex: =9

    iconCalendar3 As icon.CalendarBlank:
        Height: =60
        Icon: =Icon.CalendarBlank
        OnSelect: |-
            =/*resets calendar view and date selection to today*/
                     
            Set(_dateSelected, Today());         
            Set(_firstDayOfMonth, DateAdd(Today(), 1 - Day(Today()), TimeUnit.Days));         
            Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));         
            Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days))
        TabIndex: =0
        Tooltip: ="Reset selected date to today"
        Width: =60
        X: =Parent.Width - Self.Width - 37
        Y: =dropdownCalendarSelection3.Y
        ZIndex: =10

    LblMonthSelected3 As label:
        Align: =Align.Center
        Font: =Font.Lato
        Height: =64
        Size: =21
        Text: =Text(_firstDayOfMonth, "mmmm yyyy")
        Visible: =_calendarVisible
        Width: =Parent.Width
        Wrap: =false
        Y: =dropdownCalendarSelection3.Y + dropdownCalendarSelection3.Height + 20
        ZIndex: =11

    iconPrevMonth3 As icon.ChevronLeft:
        Icon: =Icon.ChevronLeft
        OnSelect: |-
            =/*changes month view to previous month*/
                       
            Set(_firstDayOfMonth, DateAdd(_firstDayOfMonth, -1, TimeUnit.Months));           
            Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));           
            Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days));           
            /*collects calendar events for all days in current month view. Updates _minDate to prevent duplicate data collection if user returns to this month view*/           
            If(_minDate > _firstDayOfMonth,           
             Collect(MyCalendarEvents, Office365Outlook.GetEventsCalendarViewV2(_myCalendar.Name, Text(_firstDayInView, DateTimeFormat.UTC), Text(DateAdd(_minDate, -1, TimeUnit.Days), DateTimeFormat.UTC)).value);           
             Set(_minDate, _firstDayInView))
        PaddingBottom: =10
        PaddingLeft: =10
        PaddingRight: =10
        PaddingTop: =10
        TabIndex: =0
        Tooltip: ="View previous month"
        Visible: =_calendarVisible
        Width: =91
        Y: =LblMonthSelected3.Y
        ZIndex: =12

    iconNextMonth3 As icon.ChevronRight:
        Icon: =Icon.ChevronRight
        OnSelect: |-
            =/*changes month view to next month*/
                       
            Set(_firstDayOfMonth, DateAdd(_firstDayOfMonth, 1, TimeUnit.Months));           
            Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));           
            /*collects calendar events for all days in current month view. Updates _maxDate to prevent duplicate data collection if user returns to this month view*/           
            Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days));           
            If(_maxDate < _lastDayOfMonth,           
             Collect(MyCalendarEvents, Office365Outlook.GetEventsCalendarViewV2(_myCalendar.Name, Text(DateAdd(_maxDate, 1, TimeUnit.Days), DateTimeFormat.UTC), DateAdd(_firstDayInView, 40, TimeUnit.Days)).value);           
             Set(_maxDate, DateAdd(_firstDayInView, 40, TimeUnit.Days)))
        PaddingBottom: =10
        PaddingLeft: =10
        PaddingRight: =10
        PaddingTop: =10
        TabIndex: =0
        Tooltip: ="View next month"
        Visible: =_calendarVisible
        Width: =91
        X: =Parent.Width - Self.Width
        Y: =LblMonthSelected3.Y
        ZIndex: =13

    WeekdayGallery3 As gallery.WeekdayGallery:
        AccessibleLabel: ="Days of the week"
        Height: =45
        Items: =Calendar.WeekdaysShort()
        ShowScrollbar: =false
        TemplatePadding: =0
        TemplateSize: =91
        Visible: =_calendarVisible
        Width: =Parent.Width
        Y: =LblMonthSelected3.Y + LblMonthSelected3.Height + 20
        ZIndex: =14

        Title8 As label:
            Align: =Align.Center
            Font: =Font.Lato
            Height: =WeekdayGallery3.TemplateHeight
            OnSelect: =Select(Parent)
            Size: =17 * WeekdayGallery3.TemplateWidth / 77
            Text: =ThisItem.Value
            Width: =WeekdayGallery3.TemplateWidth
            Wrap: =false
            X: =WeekdayGallery3.TemplateWidth / 2 - Self.Width / 2
            Y: =WeekdayGallery3.TemplateHeight / 2 - Self.Height / 2
            ZIndex: =1

    MonthDayGallery3 As gallery.MonthDayGallery:
        AccessibleLabel: ="Days of selected month"
        Height: =390
        Items: =[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19, 20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41]
        Layout: =Layout.Vertical
        ShowScrollbar: =false
        TemplatePadding: =0
        TemplateSize: =65
        Visible: =_calendarVisible
        Width: =Parent.Width
        WrapCount: =7
        Y: =WeekdayGallery3.Y + WeekdayGallery3.Height
        ZIndex: =15

        Circle4 As circle:
            Height: =Self.Width
            OnSelect: =Select(Parent)
            Visible: |-
                =/*Visible if calendar events are found on this day*/               
                CountRows(Filter(MyCalendarEvents, DateValue(Text(Start)) = DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days))) > 0 && !Subcircle3.Visible && Title9.Visible
            Width: =6.5
            X: =MonthDayGallery3.TemplateWidth / 2 - Self.Width / 2
            Y: =MonthDayGallery3.TemplateHeight * (0.75)
            ZIndex: =1

        Subcircle3 As circle:
            Height: =3 * Title9.Size
            OnSelect: =Select(Parent)
            Visible: =And(DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, Title9.Visible)
            Width: =Self.Height
            X: =MonthDayGallery3.TemplateWidth/2 - Self.Width/2
            Y: =MonthDayGallery3.TemplateHeight / 2 - Self.Height / 2
            ZIndex: =2

        Title9 As label:
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 0)
            Color: =If(DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, RGBA(255, 255, 255, 1), DateAdd(_firstDayInView, ThisItem.Value) = Today(), RGBA(47, 41, 43, 1), LblMonthSelected3.Color)
            Fill: |-
                =/*Fill value changes if the gallery item day = today, or if it lies outside of the current month*/             
                If(
                    /*Date selected is today*/
                    DateAdd(_firstDayInView, ThisItem.Value) = Today() && DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, RGBA(0,0,0,0),
                    /*Today when it is not selected*/
                    DateAdd(_firstDayInView, ThisItem.Value) = Today(), ColorFade(Subcircle3.Fill, 0.67), 
                    /*The day is outside the range of the currently selected month*/
                    Abs(Self.Text - ThisItem.Value) > 10,RGBA(200, 200, 200, 0.3), RGBA(0, 0, 0, 0))
            FocusedBorderColor: =Self.Color
            FocusedBorderThickness: =2
            Font: =Font.Lato
            Height: =MonthDayGallery3.TemplateHeight
            OnSelect: =Set(_dateSelected, DateAdd(_firstDayInView, ThisItem.Value, TimeUnit.Days))
            Size: =17 * MonthDayGallery3.TemplateWidth / 91
            TabIndex: =0
            Text: =Day(DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days))
            Visible: |-
                =/*This item is in a row containing no days of the visible month. It is in the row after the row where the last day of the month occurs*/ 
                 !(DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days) - Weekday(DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days)) + 1 > _lastDayOfMonth)
            Width: =MonthDayGallery3.TemplateWidth
            Wrap: =false
            ZIndex: =3

    RectCalendarEventsHeader3 As rectangle:
        Height: =LblCalendarEventsHeader3.Height
        Visible: =_calendarVisible
        Width: =LblCalendarEventsHeader3.Width
        X: =LblCalendarEventsHeader3.X
        Y: =LblCalendarEventsHeader3.Y
        ZIndex: =16

    LblCalendarEventsHeader3 As label:
        Font: =Font.Lato
        Height: =60
        PaddingLeft: =30
        Size: =21
        Text: =Text(_dateSelected, DateTimeFormat.LongDate)
        Visible: =_calendarVisible
        Width: =Parent.Width
        Wrap: =false
        Y: =MonthDayGallery3.Y + MonthDayGallery3.Height + If(DateAdd(_firstDayInView, 35, TimeUnit.Days) > _lastDayOfMonth, -65, 0)
        ZIndex: =17

    CalendarEventsGallery3 As gallery.CalendarEventsGallery:
        AccessibleLabel: ="Calendar events for selected day"
        Height: =Parent.Height - Self.Y
        Items: |-
            =/*Shows events only on selected date*/
            SortByColumns(Filter(MyCalendarEvents, Text(Start, DateTimeFormat.ShortDate) = Text(_dateSelected, DateTimeFormat.ShortDate)), "Start")
        Layout: =Layout.Vertical
        ShowScrollbar: =false
        TemplatePadding: =0
        TemplateSize: =105
        Visible: =_calendarVisible
        Width: =Parent.Width
        Y: =LblCalendarEventsHeader3.Y + LblCalendarEventsHeader3.Height
        ZIndex: =18

        Rectangle7 As rectangle:
            BorderThickness: =If(ThisItem.Id = _selectedCalendarEvent.Id, 2, 0)
            Fill: =RGBA(0,0,0,0)
            Height: =Parent.TemplateHeight
            HoverFill: =RGBA(0,0,0,0)
            OnSelect: =Select(Title10)
            TabIndex: =0
            Width: =Parent.TemplateWidth
            ZIndex: =1

        iconLocation3 As icon.Waypoint:
            Height: =Subtitle3.Height
            Icon: =Icon.Waypoint
            OnSelect: =Select(Title10)
            TabIndex: =0
            Width: =28
            X: =Title10.X
            Y: =Subtitle3.Y
            ZIndex: =2

        Title10 As label:
            BorderColor: =Self.Color
            FocusedBorderThickness: =2
            Font: =Font.Lato
            FontWeight: =FontWeight.Semibold
            Height: =Self.Size * 1.8
            OnSelect: =Set(_selectedCalendarEvent, ThisItem)
            Size: =19 * CalendarEventsGallery3.TemplateHeight / 105
            TabIndex: =0
            Text: =ThisItem.Subject
            Tooltip: =ThisItem.Subject
            Width: =CalendarEventsGallery3.TemplateWidth - Self.X - 10
            Wrap: =false
            X: =Body3.X + Body3.Width + 10
            Y: =CalendarEventsGallery3.TemplateHeight / 4 - Self.Height / 2 + 5
            ZIndex: =3

        Subtitle3 As label:
            FocusedBorderThickness: =2
            Font: =Font.Lato
            FontWeight: =FontWeight.Lighter
            Height: =Self.Size * 2
            OnSelect: =Select(Title10)
            PaddingBottom: =0
            Size: =18 * CalendarEventsGallery3.TemplateHeight / 105
            Text: =ThisItem.Location
            Tooltip: =ThisItem.Location
            Width: =CalendarEventsGallery3.TemplateWidth - Self.X - 10
            Wrap: =false
            X: =iconLocation3.X + iconLocation3.Width + 10
            Y: =3 / 4 * CalendarEventsGallery3.TemplateHeight - Self.Height / 2 - 5
            ZIndex: =4

        Body3 As label:
            FocusedBorderThickness: =2
            Height: =Title10.Height
            OnSelect: =Select(Title10)
            Size: =17 * CalendarEventsGallery3.TemplateHeight / 105
            Text: =Text(ThisItem.Start, DateTimeFormat.ShortTime)
            Width: =110
            Wrap: =false
            X: =32
            Y: =Title10.Y
            ZIndex: =5

        Description3 As label:
            FocusedBorderThickness: =2
            Height: =Subtitle3.Height
            OnSelect: =Select(Title10)
            Size: =17 * CalendarEventsGallery3.TemplateHeight / 105
            Text: =DateDiff(ThisItem.Start, ThisItem.End, TimeUnit.Minutes) & Lower(Left("Minute_Name", 1))
            Width: =100
            Wrap: =false
            X: =32
            Y: =Subtitle3.Y
            ZIndex: =6

        Separator4 As rectangle:
            Height: =1
            OnSelect: =Select(Parent)
            Width: =Parent.TemplateWidth
            Y: =Parent.TemplateHeight - 1
            ZIndex: =7

    iconEmptyState3 As icon.CalendarBlank:
        DisplayMode: =DisplayMode.View
        Icon: =Icon.CalendarBlank
        Visible: =IsBlank(_userDomain)
        X: =Parent.Width/2 - Self.Width/2
        Y: =LblEmptyState3.Y - Self.Height
        ZIndex: =19

    LblEmptyState3 As label:
        Align: =Align.Center
        DisplayMode: =DisplayMode.View
        Height: =150
        Size: =21
        Text: ="Select a calendar from the drop down to begin"
        Visible: =IsBlank(_userDomain)
        Width: =450
        X: =81
        Y: =467
        ZIndex: =20

    LblNoEvents3 As label:
        Align: =Align.Center
        DisplayMode: =DisplayMode.View
        Height: =64
        Size: =21
        Text: =If(_showLoading, "Loading events...", "No events scheduled")
        Visible: =Or(_showLoading, CountRows(CalendarEventsGallery3.AllItems) = 0 && _calendarVisible)
        Width: =CalendarEventsGallery3.Width
        Wrap: =false
        X: =CalendarEventsGallery3.X
        Y: =CalendarEventsGallery3.Y + CalendarEventsGallery3.Height/2 - Self.Height/2
        ZIndex: =21

